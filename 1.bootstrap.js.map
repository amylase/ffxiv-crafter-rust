{"version":3,"sources":["webpack:///../pkg/ffxiv_crafter_rust.js","webpack:///../pkg/ffxiv_crafter_rust_bg.js","webpack:///./src/App.tsx","webpack:///./src/components/CrafterGame.tsx","webpack:///./src/components/GameStateView.tsx","webpack:///./src/index.tsx","webpack:///./src/models/gamestate.ts","webpack:///./src/rustfuncs.ts"],"names":[],"mappings":"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CA;AACA,uDAAuD,0BAA0B;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,kCAAkC,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,oFAAoF,GAAG,mBAAmB;AAC/K,KAAK;AACL;AACA;AACA;AACA,uDAAuD,8DAA8D,oCAAoC,qEAAqE,oBAAoB,GAAG,2BAA2B,sEAAsE,oBAAoB,GAAG,4DAA4D,+EAA+E,WAAW;AACngB,2EAA2E,oBAAoB,GAAG,sCAAsC;AACxI,8EAA8E,iDAAiD,GAAG,oBAAoB,aAAa;AACnK;AACA;;;;;;;;;;;;;AC1Ea;AACb,8CAA8C,cAAc;AAC5D;AACA,oBAAoB,mBAAO,CAAC,8DAAmB;AAC/C;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA,sCAAsC,qCAAqC,kFAAkF,oCAAoC,4EAA4E,oCAAoC,yEAAyE,oCAAoC,4DAA4D,mCAAmC,oCAAoC,oCAAoC,6CAA6C,YAAY;AAC9nB;AACA;;;;;;;;;;;;;AChBa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,8DAAmB;AAC/C,8BAA8B,mBAAO,CAAC,4CAAO;AAC7C,kCAAkC,mBAAO,CAAC,oDAAW;AACrD,YAAY,mBAAO,CAAC,4BAAO;AAC3B,0EAA0E,0CAA0C,WAAW;;;;;;;;;;;;;ACTlH;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrEa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,wBAAwB,mBAAO,CAAC,wDAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"1.bootstrap.js","sourcesContent":["import * as wasm from \"./ffxiv_crafter_rust_bg.wasm\";\nexport * from \"./ffxiv_crafter_rust_bg.js\";","import * as wasm from './ffxiv_crafter_rust_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nexport function greet() {\n    wasm.greet();\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst int64CvtShim = new BigInt64Array(u32CvtShim.buffer);\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n* @param {string} params_str\n* @param {string} state_str\n* @param {BigInt} depth\n* @returns {string}\n*/\nexport function search_best_move(params_str, state_str, depth) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(params_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(state_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        int64CvtShim[0] = depth;\n        const low2 = u32CvtShim[0];\n        const high2 = u32CvtShim[1];\n        wasm.search_best_move(retptr, ptr0, len0, ptr1, len1, low2, high2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} params_str\n* @param {string} state_str\n* @param {string} action_str\n* @returns {string}\n*/\nexport function apply_action(params_str, state_str, action_str) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(params_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(state_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passStringToWasm0(action_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        wasm.apply_action(retptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} params_str\n* @param {string} state_str\n* @param {string} action_str\n* @returns {string}\n*/\nexport function play_action(params_str, state_str, action_str) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(params_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(state_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passStringToWasm0(action_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        wasm.play_action(retptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} state_str\n* @returns {string}\n*/\nexport function available_actions(state_str) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(state_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.available_actions(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nexport function __wbg_alert_78e0020f2c65fff5(arg0, arg1) {\n    alert(getStringFromWasm0(arg0, arg1));\n};\n\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.App = void 0;\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nvar CrafterGame_1 = require(\"./components/CrafterGame\");\nfunction App(props) {\n    var itemParams = {\n        internal_level: 490,\n        max_durability: 55,\n        max_progress: 12046,\n        max_quality: 81447,\n        standard_craftsmanship: 2180,\n        standard_control: 2010,\n        is_expert_recipe: true,\n    };\n    var playerParams = {\n        raw_level: 80,\n        craftsmanship: 2978,\n        control: 2787,\n        max_cp: 655,\n    };\n    var params = {\n        player: playerParams,\n        item: itemParams,\n    };\n    return (jsx_runtime_1.jsx(\"div\", __assign({ className: \"m-5\" }, { children: jsx_runtime_1.jsx(CrafterGame_1.CrafterGame, { params: params }, void 0) }), void 0));\n}\nexports.App = App;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CrafterGame = void 0;\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nvar react_1 = require(\"react\");\nvar react_bootstrap_1 = require(\"react-bootstrap\");\nvar gamestate_1 = require(\"../models/gamestate\");\nvar rustfuncs_1 = require(\"../rustfuncs\");\nvar GameStateView_1 = require(\"./GameStateView\");\nfunction CrafterGame(props) {\n    var params = props.params;\n    var _a = react_1.useState(gamestate_1.initial_state(params)), craftState = _a[0], setCraftState = _a[1];\n    var _b = react_1.useState(false), aiAdviceEnabled = _b[0], setAiAdviceEnabled = _b[1];\n    var possible_actions = rustfuncs_1.available_actions(craftState);\n    function onActionButtonClickFactory(action) {\n        return function () {\n            var rand = Math.random();\n            var nextStates = rustfuncs_1.play_action(params, craftState, action);\n            var accumulate = 0.;\n            var sampledState;\n            for (var _i = 0, nextStates_1 = nextStates; _i < nextStates_1.length; _i++) {\n                var nextState = nextStates_1[_i];\n                accumulate += nextState.probability;\n                if (rand <= accumulate) {\n                    sampledState = nextState.state;\n                    break;\n                }\n            }\n            setCraftState(sampledState);\n        };\n    }\n    function onResetButtonClick() {\n        setCraftState(gamestate_1.initial_state(params));\n    }\n    var aiAdvice;\n    if (aiAdviceEnabled && craftState.result === \"ONGOING\") {\n        aiAdvice = rustfuncs_1.search_best_move(params, craftState, 3);\n    }\n    ;\n    var action_buttons = gamestate_1.craftActions.map(function (action) {\n        var disabled;\n        var variant;\n        if (action === aiAdvice) {\n            disabled = false;\n            variant = \"success\";\n        }\n        else if (possible_actions.some(function (possible_action) { return possible_action == action; })) {\n            disabled = false;\n            variant = \"primary\";\n        }\n        else {\n            disabled = true;\n            variant = \"secondary\";\n        }\n        return jsx_runtime_1.jsx(react_bootstrap_1.Button, __assign({ variant: variant, disabled: disabled, onClick: onActionButtonClickFactory(action) }, { children: action }), action);\n    });\n    function onAiAdviceCheckChange(event) {\n        setAiAdviceEnabled(event.target.value);\n    }\n    return jsx_runtime_1.jsxs(react_bootstrap_1.Form, { children: [jsx_runtime_1.jsx(GameStateView_1.GameStateView, { params: params, state: craftState }, void 0), jsx_runtime_1.jsx(react_bootstrap_1.Form.Group, __assign({ className: \"mb-3\" }, { children: action_buttons }), void 0), jsx_runtime_1.jsx(react_bootstrap_1.Form.Group, __assign({ className: \"mb-3\" }, { children: jsx_runtime_1.jsx(react_bootstrap_1.Form.Check, { type: \"checkbox\", label: \"Enable AI Advice\", onChange: onAiAdviceCheckChange }, void 0) }), void 0), aiAdviceEnabled ?\n                jsx_runtime_1.jsxs(react_bootstrap_1.Form.Group, __assign({ className: \"mb-3\" }, { children: [\"AI Advice: \", aiAdvice] }), void 0)\n                : null, jsx_runtime_1.jsx(react_bootstrap_1.Button, __assign({ variant: \"danger\", onClick: onResetButtonClick }, { children: \"Reset\" }), void 0)] }, void 0);\n}\nexports.CrafterGame = CrafterGame;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameStateView = void 0;\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nfunction GameStateView(props) {\n    var params = props.params, state = props.state;\n    var buffs = [\"inner_quiet\", \"innovation\", \"veneration\", \"muscle_memory\", \"waste_not\", \"great_strides\", \"final_appraisal\", \"manipulation\"];\n    var buffStatuses = [];\n    for (var _i = 0, buffs_1 = buffs; _i < buffs_1.length; _i++) {\n        var buffName = buffs_1[_i];\n        if (state[buffName] > 0) {\n            buffStatuses.push(buffName + \": \" + state[buffName]);\n        }\n    }\n    return jsx_runtime_1.jsxs(\"div\", { children: [jsx_runtime_1.jsxs(\"p\", { children: [\"durability: \", state.durability, \" / \", params.item.max_durability] }, void 0), jsx_runtime_1.jsxs(\"p\", { children: [\"progress: \", state.progress, \" / \", params.item.max_progress] }, void 0), jsx_runtime_1.jsxs(\"p\", { children: [\"quality: \", state.quality, \" / \", params.item.max_quality] }, void 0), jsx_runtime_1.jsxs(\"p\", { children: [\"cp: \", state.cp, \" / \", params.player.max_cp] }, void 0), jsx_runtime_1.jsx(\"p\", { children: buffStatuses.join(\", \") }, void 0), jsx_runtime_1.jsxs(\"p\", { children: [\"condition: \", state.condition] }, void 0)] }, void 0);\n}\nexports.GameStateView = GameStateView;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nvar react_1 = __importDefault(require(\"react\"));\nvar react_dom_1 = __importDefault(require(\"react-dom\"));\nvar App_1 = require(\"./App\");\nreact_dom_1.default.render(jsx_runtime_1.jsx(react_1.default.StrictMode, { children: jsx_runtime_1.jsx(App_1.App, {}, void 0) }, void 0), document.getElementById('root'));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initial_state = exports.craftActions = exports.craftResults = exports.statusConditions = void 0;\nexports.statusConditions = [\n    \"NORMAL\",\n    \"GOOD\",\n    \"EXCELLENT\",\n    \"POOR\",\n    \"CENTRED\",\n    \"PLIANT\",\n    \"STURDY\",\n    \"MALLEABLE\",\n    \"PRIMED\",\n];\nexports.craftResults = [\n    \"ONGOING\",\n    \"FAILED\",\n    \"SUCCESS\",\n];\nexports.craftActions = [\n    \"BasicSynthesis\",\n    \"BasicTouch\",\n    \"MastersMend\",\n    \"InnerQuiet\",\n    \"DelicateSynthesis\",\n    \"CarefulSynthesis\",\n    \"Groundwork\",\n    \"Observe\",\n    \"ByregotBlessing\",\n    \"PreparatoryTouch\",\n    \"RapidSynthesis\",\n    \"IntensiveSynthesis\",\n    \"HastyTouch\",\n    \"PreciseTouch\",\n    \"PatientTouch\",\n    \"TrickOfTheTrade\",\n    \"Innovation\",\n    \"Veneration\",\n    \"MuscleMemory\",\n    \"FocusedSynthesis\",\n    \"StandardTouch\",\n    \"FocusedTouch\",\n    \"Reflect\",\n    \"WasteNot\",\n    \"WasteNotII\",\n    \"PrudentTouch\",\n    \"GreatStrides\",\n    \"FinalAppraisal\",\n    \"Manipulation\",\n];\nfunction initial_state(params) {\n    return {\n        durability: params.item.max_durability,\n        progress: 0,\n        quality: 0,\n        cp: params.player.max_cp,\n        condition: \"NORMAL\",\n        inner_quiet: 0,\n        innovation: 0,\n        veneration: 0,\n        muscle_memory: 0,\n        waste_not: 0,\n        great_strides: 0,\n        final_appraisal: 0,\n        manipulation: 0,\n        turn: 1,\n        result: \"ONGOING\",\n    };\n}\nexports.initial_state = initial_state;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.call_wasm = exports.available_actions = exports.play_action = exports.apply_action = exports.search_best_move = void 0;\nvar wasm = __importStar(require(\"ffxiv-crafter-rust\"));\nfunction search_best_move(params, state, depth) {\n    return JSON.parse(wasm.search_best_move(JSON.stringify(params), JSON.stringify(state), BigInt(depth)));\n}\nexports.search_best_move = search_best_move;\nfunction apply_action(params, state, action) {\n    var serialized_states = wasm.apply_action(JSON.stringify(params), JSON.stringify(state), action);\n    return JSON.parse(serialized_states);\n}\nexports.apply_action = apply_action;\nfunction play_action(params, state, action) {\n    var serialized_states = wasm.play_action(JSON.stringify(params), JSON.stringify(state), action);\n    return JSON.parse(serialized_states);\n}\nexports.play_action = play_action;\nfunction available_actions(state) {\n    var available_actions_str = wasm.available_actions(JSON.stringify(state));\n    return JSON.parse(available_actions_str);\n}\nexports.available_actions = available_actions;\nfunction call_wasm() {\n    var item_params = {\n        internal_level: 490,\n        max_durability: 55,\n        max_progress: 12046,\n        max_quality: 81447,\n        standard_craftsmanship: 2180,\n        standard_control: 2010,\n        is_expert_recipe: true,\n    };\n    var player_params = {\n        raw_level: 80,\n        craftsmanship: 2978,\n        control: 2787,\n        max_cp: 655,\n    };\n    var crafter_params = {\n        player: player_params,\n        item: item_params,\n    };\n    var state = {\n        durability: item_params.max_durability,\n        progress: 0,\n        quality: 0,\n        cp: player_params.max_cp,\n        condition: \"NORMAL\",\n        inner_quiet: 0,\n        innovation: 0,\n        veneration: 0,\n        muscle_memory: 0,\n        waste_not: 0,\n        great_strides: 0,\n        final_appraisal: 0,\n        manipulation: 0,\n        turn: 1,\n        prev_action: \"MuscleMemory\",\n        result: \"ONGOING\",\n    };\n    alert(state);\n    var best_move = wasm.search_best_move(JSON.stringify(crafter_params), JSON.stringify(state), BigInt(3));\n    alert(best_move);\n}\nexports.call_wasm = call_wasm;\n"],"sourceRoot":""}